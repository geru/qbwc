<?php
/**
 * @file
 * Install, update, and uninstall functions for the qbwc_interface module.
 */

require_once 'qbwc_interface.inc';

/**
 * Implements hook_requirements()
 */
function qbwc_interface_requirements()
{
  $requirements = array();
  // Ensure translations do not break at install time
  $t = get_t();

  $requirements['qbwc_interface'] = array(
    'title' => $t('qbwc_interface'),
  );

  global $base_url;

  if(!(isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off' || stristr($base_url, 'localhost'))) {
    $requirements['qbwc_interface']['value'] = $t('Not Installed');
    $requirements['qbwc_interface']['severity'] = REQUIREMENT_ERROR;
    $requirements['qbwc_interface']['description'] = $t('Drupal site must be HTTPS or localhost. Please correct.');
  }
  return $requirements;
}

/*
 * Implements hook_schema()
 */
function qbwc_interface_schema() {
  $schema['qbwc'] = array(
    'description' => 'Quickbooks Webconnector endpoints and settings',
    'fields' => array(
      'id' => array(
        'description' => 'unique ID for each endpoint',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'bookname' => array(
        'description' => 'machine name of unique data this endpoint:username is associated with',
        'type' => 'text',
        'length' => 64,
      ),
      'endpoint' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'qwc_username' => array(
        'description' => 'UserName',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'password' => array(
        'description' => 'Password',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'qwc_ownerid' => array(
        'description' => 'OwnerID',
        'type' => 'varchar',
        'length' => 38,
        'not null' => TRUE,
      ),
      'qwc_fileid' => array(
        'description' => 'FileID',
        'type' => 'varchar',
        'length' => 38,
        'not null' => TRUE,
      ),
      'qwc_isreadonly' => array( // true || false
        'description' => 'IsReadonly',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => 'false',
      ),
      'qwc_authflags' => array(
        'description' => 'Authflags',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => '0xf',
      ),
      'qwc_qbtype' => array(
        'description' => 'QBType',
        'type' => 'varchar',
        'length' => 16,
        'not null' => TRUE,
        'default' => 'QBFS',
      ),
      'ticket' => array(
        'description' => 'existing ticket -- ssh-encoded session ID',
        'type' => 'varchar',
        'length' => 64,
      ),
      'lasterr' => array(
        'description' => 'error, if applicable',
        'type' => 'int',
      ),
      'company' => array(
        'description' => 'company info from QB',
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'reqtotal' => array(
        'description' => 'total number of requests to process',
        'type' => 'int',
      ),
      'reqdone' => array(
        'description' => 'total number of requests processed',
        'type' => 'int',
      ),
      // saving field space for fields that aren't used in this implementation but defined in .QWC spec
      'qwc_unattendedmodepref' => array( // umpRequired || umpOptional
        'description' => 'UnattendedModePref',
        'type' => 'varchar',
        'length' => 16,
      ),
      'qwc_style' => array( // Document || DocWrapped || RPC
        'description' => 'Style',
        'type' => 'varchar',
        'length' => 16,
      ),
      'qwc_scheduler' => array( // <RunEveryNMinutes>... || <RunEveryNSeconds>...
        'description' => 'Scheduler',
        'type' => 'varchar',
        'length' => 64,
      ),
      'qwc_personaldatapref' => array( // pdpNotNeeded/pdpOptional || pdpRequired
        'description' => 'PersonalDataPref',
        'type' => 'varchar',
        'length' => 16,
      ),
      'qwc_notify' => array( // true
        'description' => 'Notify',
        'type' => 'varchar',
        'length' => 4,
      ),
      'qwc_appuniquename' => array( // Document || DocWrapped || RPC
        'description' => 'AppUniqueName',
        'type' => 'varchar',
        'length' => 16,
      ),
      'qwc_appname' => array( // Document || DocWrapped || RPC
        'description' => 'AppName',
        'type' => 'varchar',
        'length' => 64,
      ),
      'qwc_appdisplayname' => array( // Document || DocWrapped || RPC
        'description' => 'AppDisplayName',
        'type' => 'varchar',
        'length' => 64,
      ),
      'qwc_appdescription' => array( // Document || DocWrapped || RPC
        'description' => 'AppDescription',
        'type' => 'varchar',
        'length' => 80,
      ),
      'qwc_appid' => array( // Document || DocWrapped || RPC
        'description' => 'AppID',
        'type' => 'varchar',
        'length' => 32,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'auth' => array( 'endpoint', 'qwc_username', 'password' ),
      'tix' => array( 'endpoint', 'ticket' ),
     ),
  );
  return( $schema );
}


/**
 * Implements hook_enable()
 */
function qbwc_interface_enable() {
  menu_rebuild();
}

/**
 * Implements hook_disable()
 */
function qbwc_interface_disable() {
  menu_rebuild();
}

/**
 * Implements hook_uninstall().
 */
function qbwc_interface_uninstall() {
}

